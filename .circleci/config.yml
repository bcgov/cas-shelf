version: 2.1

jobs:
  tools:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/cas-shelf
    steps:
      - checkout:
          path: ~/cas-shelf
      - restore_cache:
          name: Restore asdf Tools Cache
          keys:
            - tool-versions-{{ checksum ".tool-versions" }}-v2
      - run:
          name: Install tools via asdf
          command: |
            [[ -d ~/.asdf ]] || git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.4
            pushd ~/.asdf && git checkout v0.7.4 && popd
            echo -e '\n. $HOME/.asdf/asdf.sh' >> ~/.bashrc
            echo -e '\nexport BASH_ENV="~/.asdf/asdf.sh"' >> ~/.bashrc
            source ~/.bashrc
            make install_asdf_tools
      - save_cache:
          name: Save asdf Tools Cache
          key: tool-versions-{{ checksum ".tool-versions" }}-v2
          paths:
            - ~/.asdf
      - persist_to_workspace:
          root: ~/
          paths:
            - .asdf
            - .bashrc
            - cas-shelf

  unit:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/cas-shelf/tests
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run Terratest & Nodejs tests
          command: |
            source ~/.asdf/asdf.sh
            make setup
            make dep
            make terratest
            make test_node
            make destroy

  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/cas-shelf
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install bash to run semver
          command: |
            apk update
            apk upgrade
            apk add bash
      - run:
          name: Install semver for versioning
          command: |
            git clone git@github.com:fsaintjacques/semver-tool.git
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/cas-shelf-tfe-add-app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/cas-shelf-tfe-add-app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=cas-shelf-tfe-add-app -t cas-shelf-tfe-add-app -f ./docker/add-app/Dockerfile .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/cas-shelf-tfe-add-app.tar cas-shelf-tfe-add-app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/cas-shelf-tfe-add-app.tar
      - deploy:
          name: Push application Docker image
          command: |
            SEMVER_GET="./semver-tool/src/semver get"
            MAJOR=$($SEMVER_GET major $CIRCLE_TAG)
            MINOR=$($SEMVER_GET minor $CIRCLE_TAG)
            PATCH=$($SEMVER_GET patch $CIRCLE_TAG)
            PRE=$($SEMVER_GET prerel $CIRCLE_TAG)

            TAG1=${MAJOR}
            TAG2=${MAJOR}.${MINOR}
            TAG3=${MAJOR}.${MINOR}.${PATCH}
            TAG4=${MAJOR}.${MINOR}.${PATCH}-${PRE}

            ALL_TAGS=""
            ALL_TAGS="${ALL_TAGS} ${TAG1}"
            ALL_TAGS="${ALL_TAGS} ${TAG2}"
            ALL_TAGS="${ALL_TAGS} ${TAG3}"
            ALL_TAGS="${ALL_TAGS} ${TAG4}"

            if [ $CIRCLE_TAG != $TAG4 ]; then
              ALL_TAGS="${ALL_TAGS} ${CIRCLE_TAG}"
            fi

            docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN

            for TAG in ${ALL_TAGS}; do
              TARGET="docker.pkg.github.com/bcgov/cas-shelf/cas-shelf-tfe-add-app:${TAG}"
              docker tag cas-shelf-tfe-add-app ${TARGET}
              docker push ${TARGET}
            done

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - tools:
          filters:
            tags:
              only: /.*/
      - unit:
          requires:
            - tools
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - unit
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
